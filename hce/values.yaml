# Default values for litmus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

portalScope: cluster

nameOverride: ""

# -- Additional labels
customLabels: {}
# my.company.com/concourse-cd: 2

adminConfig:
  DBUSER: "admin"
  DBPASSWORD: "1234"
  JWTSecret: "litmus-portal@123"
  VERSION: "2.8.0"
  # -- leave empty if uses Mongo DB deployed by this chart
  DB_SERVER: ""
  DB_PORT: "27017"

image:
  imageRegistryName: chaosnative
  # Optional pod imagePullSecrets
  imagePullSecrets:
    - name: regcred

ingress:
  enabled: false
  name: litmus-ingress
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # nginx.ingress.kubernetes.io/rewrite-target: /$1

  host:
    # -- This is ingress hostname (ex: my-domain.com)
    name: ""
    paths:
      # -- You may need adapt the path depending your ingress-controller
      frontend: /(.*)
      # -- You may need adapt the path depending your ingress-controller
      backend: /backend/(.*)
  tls: []
  #  - secretName: chart-example-tls
  #    hosts: []

upgradeAgent:
  controlPlane:
    image:
      repository: upgrade-agent-cp
      tag: "ci"
      pullPolicy: "Always"
  nodeSelector: {}
  tolerations: []
  affinity: {}

portal:
  frontend:
    replicas: 1
    updateStrategy: {}
    ## Strategy for deployment updates.
    ##
    ## Example:
    ##
    ##   strategy:
    ##     type: RollingUpdate
    ##     rollingUpdate:
    ##       maxSurge: 1
    ##       maxUnavailable: 25%
    image:
      repository: hce-frontend
      tag: 2.8.0
      pullPolicy: "Always"
    containerPort: 8080
    customLabels: {}
    # my.company.com/tier: "frontend"

    resources: 
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 512Mi
        ephemeral-storage: "1Gi"
      requests:
        cpu: 250m
        memory: 300Mi
        ephemeral-storage: "500Mi"
    livenessProbe:
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    service:
      type: NodePort
      port: 9091
      targetPort: 8080
    virtualService:
      enabled: false
      hosts: []
      gateways: []
    nodeSelector: {}
    tolerations: []
    affinity: {}

  authServer:
    replicas: 1
    updateStrategy: {}
    ## Strategy for deployment updates.
    ##
    ## Example:
    ##
    ##   strategy:
    ##     type: RollingUpdate
    ##     rollingUpdate:
    ##       maxSurge: 1
    ##       maxUnavailable: 25%
    serviceAccountName: default
    customLabels: {}

    image:
      repository: hce-auth-server
      tag: 2.8.0
      pullPolicy: "Always"
    serverContainerPort: 3000
    rpcContainerPort: 3030
    env:
      ADMIN_USERNAME: "admin"
      ADMIN_PASSWORD: "litmus"
      STRICT_PASSWORD_POLICY: "false"

    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 512Mi
        ephemeral-storage: "1Gi"
      requests:
        cpu: 250m
        memory: 300Mi
        ephemeral-storage: "500Mi"

    service:
      type: NodePort
      authServer:
        port: 9003
        targetPort: 3000
      authRPCServer:
        port: 3030
        targetPort: 3030
    nodeSelector: {}
    tolerations: []
    affinity: {}

  licenseServer:
    image:
      repository: hce-license-module
      tag: 2.8.0
      pullPolicy: "Always"
    containerPort: 8080

    serviceAccountName: litmus-server-account
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 512Mi
        ephemeral-storage: "1Gi"
      requests:
        cpu: 250m
        memory: 300Mi
        ephemeral-storage: "500Mi"

    service:
      type: NodePort
      licenseServer:
        port: 80
        targetPort: 8080
    nodeSelector: {}
    tolerations: []
    affinity: {}

  graphqlServer:
    replicas: 1
    updateStrategy: {}
    ## Strategy for deployment updates.
    ##
    ## Example:
    ##
    ##   strategy:
    ##     type: RollingUpdate
    ##     rollingUpdate:
    ##       maxSurge: 1
    ##       maxUnavailable: 25%
    serviceAccountName: litmus-server-account
    customLabels: {}

    image:
      repository: hce-server
      tag: 2.8.0
      pullPolicy: "Always"

    serverContainerPort: 8080
    rpcContainerPort: 8000

    imageEnv:
      ARGO_WORKFLOW_CONTROLLER_IMAGE: "chaosnative/workflow-controller:v3.2.3"
      ARGO_WORKFLOW_EXECUTOR_IMAGE: "chaosnative/argoexec:v3.2.3"
      LITMUS_CHAOS_OPERATOR_IMAGE: "chaosnative/chaos-operator:2.8.0"
      LITMUS_CHAOS_RUNNER_IMAGE: "chaosnative/chaos-runner:2.8.0"
      LITMUS_CHAOS_EXPORTER_IMAGE: "chaosnative/chaos-exporter:2.8.0"
      SUBSCRIBER_IMAGE: "chaosnative/hce-subscriber:2.8.0"
      EVENT_TRACKER_IMAGE: "chaosnative/hce-event-tracker:2.8.0"
    genericEnv:
      SELF_CLUSTER: "true"
      CONTAINER_RUNTIME_EXECUTOR: "k8sapi"
      HUB_BRANCH_NAME: "v2.8.x"
      AGENT_DEPLOYMENTS: "[\"app=chaos-exporter\", \"name=chaos-operator\", \"app=event-tracker\", \"app=workflow-controller\"]"
      REMOTE_HUB_MAX_SIZE: "5000000"
      LITMUS_CORE_VERSION: "2.8.0"
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 512m
        memory: 1Gi
        ephemeral-storage: "1Gi"
      requests:
        cpu: 125m
        memory: 350Mi
        ephemeral-storage: "500Mi"
    livenessProbe:
      failureThreshold: 5
      initialDelaySeconds: 30
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    service:
      type: NodePort
      graphqlServer:
        port: 9002
        targetPort: 8080
      graphqlRPCServer:
        port: 8000
        targetPort: 8000
    nodeSelector: {}
    tolerations: []
    affinity: {}

  waitForMongodb:
    image:
      repository: curl
      tag: 2.8.0
      pullPolicy: "Always"
    resources:
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      limits:
        cpu: 250m
        memory: 200Mi
        ephemeral-storage: "200Mi"
      requests:
        cpu: 125m
        memory: 100Mi
        ephemeral-storage: "100Mi"

mongo:
  replicas: 1
  customLabels: {}
  # my.company.com/tier: "database"
  image:
    repository: mongo
    tag: 4.2.8
    pullPolicy: "Always"
  containerPort: 27017
  resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 500m
      memory: 1Gi
      ephemeral-storage: "1Gi"
    requests:
      cpu: 250m
      memory: 500Mi
      ephemeral-storage: "500Mi"
  livenessProbe:
    failureThreshold: 5
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  readinessProbe:
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  persistence:
    size: 20Gi
    accessMode: ReadWriteOnce
    # storageClass: ""
  service:
    type: ClusterIP
    port: 27017
    targetPort: 27017
  # Service account to be used by mongo pods
  # serviceAccountName: "mongo-service-account"
  nodeSelector: {}
  tolerations: []
  affinity: {}

# OpenShift specific configuration
openshift:
  # If service should be exposed using an OpenShift route
  route:
    enabled: false
    name: litmus-portal
    annotations: {}
    host: ""